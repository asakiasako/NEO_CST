from collections import namedtuple
from .output_functions import *

OutputParameterInfo = namedtuple('OutputParameterInfo', 'paramName get unit')

OUTPUT_PARAMETERS = [
    # General
    OutputParameterInfo(paramName='TxOutputPow', get=get_tx_output_power, unit='dBm'),
    OutputParameterInfo(paramName='RxOsnrTolerance', get=get_osnr_tolerance, unit='dB'),
    # Module A (Tx)
    OutputParameterInfo(paramName='[A]SN', get=get_module_sn_generator('A'), unit='W'),
    OutputParameterInfo(paramName='[A]FwVer', get=get_module_fw_version_generator('A'), unit='W'),
    OutputParameterInfo(paramName='[A]ModPowConsumption', get=get_power_consumption_generator('A'), unit='W'),
    OutputParameterInfo(paramName='[A]DDM_Vcc', get=get_module_vcc_monitor_generator('A'), unit='V'),
    OutputParameterInfo(paramName='[A]DDM_Temperature', get=get_module_temperature_monitor_generator('A'), unit='C'),
    OutputParameterInfo(paramName='[A]DDM_Laser_Temperature', get=get_laser_temperature_monitor_generator('A'), unit='C'),
    OutputParameterInfo(paramName='[A]DDM_TxPow', get=get_module_tx_power_monitor_generator('A'), unit='dBm'),
    OutputParameterInfo(paramName='[A]DDM_RxPow', get=get_module_rx_power_monitor_generator('A'), unit='dBm'),
    OutputParameterInfo(paramName='[A]VDM_RxSignalPow', get=get_vdm_signal_power_generator('A'), unit='dBm'),
    OutputParameterInfo(paramName='[A]VDM_RxTotalPow', get=get_vdm_total_power_generator('A'), unit='dBm'),
    OutputParameterInfo(paramName='[A]VDM_OSNR', get=get_vdm_osnr_monitor_generator('A'), unit='dB'),
    OutputParameterInfo(paramName='[A]TxDriverVOCM', get=get_tx_driver_vocm_generator('A'), unit='V'),
    OutputParameterInfo(paramName='[A]DriverPI_XI', get=get_driver_pi_generator('A', 'XI'), unit='V'),
    OutputParameterInfo(paramName='[A]DriverPI_XQ', get=get_driver_pi_generator('A', 'XQ'), unit='V'),
    OutputParameterInfo(paramName='[A]DriverPI_YI', get=get_driver_pi_generator('A', 'YI'), unit='V'),
    OutputParameterInfo(paramName='[A]DriverPI_YQ', get=get_driver_pi_generator('A', 'XQ'), unit='V'),
    OutputParameterInfo(paramName='[A]RxTiaPI_XI', get=get_rx_tia_pi_generator('A', 'XI'), unit='V'),
    OutputParameterInfo(paramName='[A]RxTiaPI_XQ', get=get_rx_tia_pi_generator('A', 'XQ'), unit='V'),
    OutputParameterInfo(paramName='[A]RxTiaPI_YI', get=get_rx_tia_pi_generator('A', 'YI'), unit='V'),
    OutputParameterInfo(paramName='[A]RxTiaPI_YQ', get=get_rx_tia_pi_generator('A', 'YQ'), unit='V'),
    OutputParameterInfo(paramName='[A]RxTiaVgc_XI', get=get_rx_tia_vgc_generator('A', 'XI'), unit='V'),
    OutputParameterInfo(paramName='[A]RxTiaVgc_XQ', get=get_rx_tia_vgc_generator('A', 'XQ'), unit='V'),
    OutputParameterInfo(paramName='[A]RxTiaVgc_YI', get=get_rx_tia_vgc_generator('A', 'YI'), unit='V'),
    OutputParameterInfo(paramName='[A]RxTiaVgc_YQ', get=get_rx_tia_vgc_generator('A', 'YQ'), unit='V'),
    OutputParameterInfo(paramName='[A]PostMPD_X', get=get_post_mpd_generator('A', 'X'), unit='V'),
    OutputParameterInfo(paramName='[A]PostMPD_Y', get=get_post_mpd_generator('A', 'Y'), unit='V'),
    OutputParameterInfo(paramName='[A]RxMPD_X', get=get_rx_mpd_generator('A', 'X'), unit='V'),
    OutputParameterInfo(paramName='[A]RxMPD_Y', get=get_rx_mpd_generator('A', 'Y'), unit='V'),
    OutputParameterInfo(paramName='[A]FawBER', get=get_faw_ber_generator('A'), unit=None),
    OutputParameterInfo(paramName='[A]CfecBER', get=get_cfec_ber_generator('A'), unit=None),
    OutputParameterInfo(paramName='[A]CorrBER', get=get_corrected_ber_generator('A'), unit=None),
    OutputParameterInfo(paramName='[A]UncorrectedCW', get=get_uncorrected_codeword_generator('A'), unit=None),
    OutputParameterInfo(paramName='[A]StaircaiseBER', get=get_staircaise_estimated_ber_generator('A'), unit=None),
    OutputParameterInfo(paramName='[A]HammingBER', get=get_hamming_estimated_ber_generator('A'), unit=None),
    OutputParameterInfo(paramName='[A]EstimatedBER', get=get_total_estimated_ber_generator('A'), unit=None),
    OutputParameterInfo(paramName='[A]PcsBER', get=get_pcs_ber_generator('A'), unit=None),
    OutputParameterInfo(paramName='[A]RxPreAgc_HI', get=get_dsp_rx_pre_agc_amplitude_generator('A', 'HI'), unit=None),
    OutputParameterInfo(paramName='[A]RxPreAgc_HQ', get=get_dsp_rx_pre_agc_amplitude_generator('A', 'HQ'), unit=None),
    OutputParameterInfo(paramName='[A]RxPreAgc_VI', get=get_dsp_rx_pre_agc_amplitude_generator('A', 'VI'), unit=None),
    OutputParameterInfo(paramName='[A]RxPreAgc_VQ', get=get_dsp_rx_pre_agc_amplitude_generator('A', 'VQ'), unit=None),
    OutputParameterInfo(paramName='[A]DspMse_HI', get=get_dsp_mse_generator('A', 'HI'), unit=None),
    OutputParameterInfo(paramName='[A]DspMse_HQ', get=get_dsp_mse_generator('A', 'HQ'), unit=None),
    OutputParameterInfo(paramName='[A]DspMse_VI', get=get_dsp_mse_generator('A', 'VI'), unit=None),
    OutputParameterInfo(paramName='[A]DspMse_VQ', get=get_dsp_mse_generator('A', 'VQ'), unit=None),
    OutputParameterInfo(paramName='[A]DspMse_Avg', get=get_dsp_mse_generator('A', 'AVG'), unit=None),
    OutputParameterInfo(paramName='[A]RxAngleAverage_H', get=get_dsp_rx_angle_average_generator('A', 'H'), unit=None),
    OutputParameterInfo(paramName='[A]RxAngleAverage_V', get=get_dsp_rx_angle_average_generator('A', 'V'), unit=None),
    OutputParameterInfo(paramName='[A]DspLrxTemp', get=get_dsp_lrx_temp_generator('A'), unit=None),
    OutputParameterInfo(paramName='[A]ABC_Demod_XP', get=get_abc_demod_generator('A', 'XP'), unit=None),
    OutputParameterInfo(paramName='[A]ABC_Demod_XI', get=get_abc_demod_generator('A', 'XI'), unit=None),
    OutputParameterInfo(paramName='[A]ABC_Demod_XQ', get=get_abc_demod_generator('A', 'XQ'), unit=None),
    OutputParameterInfo(paramName='[A]ABC_Demod_YP', get=get_abc_demod_generator('A', 'YP'), unit=None),
    OutputParameterInfo(paramName='[A]ABC_Demod_YI', get=get_abc_demod_generator('A', 'YI'), unit=None),
    OutputParameterInfo(paramName='[A]ABC_Demod_YQ', get=get_abc_demod_generator('A', 'YQ'), unit=None),
    OutputParameterInfo(paramName='[A]Ch1_EVM', get=get_oma_ch1_generator('A', 'EVM'), unit=None),
    OutputParameterInfo(paramName='[A]Ch1_IQ_Offset', get=get_oma_ch1_generator('A', 'IQ Offset'), unit=None),
    OutputParameterInfo(paramName='[A]Ch1_IQGainImbalance', get=get_oma_ch1_generator('A', 'IQ Gain Imbalance'), unit=None),
    OutputParameterInfo(paramName='[A]Ch1_QuadError', get=get_oma_ch1_generator('A', 'Quadrature Error'), unit=None),
    OutputParameterInfo(paramName='[A]Ch1_SkewIQ', get=get_oma_ch1_generator('A', 'Skew I<->Q'), unit=None),
    OutputParameterInfo(paramName='[A]Ch1_Q-Factor', get=get_oma_ch1_generator('A', 'Q-Factor'), unit=None),
    OutputParameterInfo(paramName='[A]Ch2_EVM', get=get_oma_ch2_generator('A', 'EVM'), unit=None),
    OutputParameterInfo(paramName='[A]Ch2_IQ_Offset', get=get_oma_ch2_generator('A', 'IQ Offset'), unit=None),
    OutputParameterInfo(paramName='[A]Ch2_IQGainImbalance', get=get_oma_ch2_generator('A', 'IQ Gain Imbalance'), unit=None),
    OutputParameterInfo(paramName='[A]Ch2_QuadError', get=get_oma_ch2_generator('A', 'Quadrature Error'), unit=None),
    OutputParameterInfo(paramName='[A]Ch2_SkewIQ', get=get_oma_ch2_generator('A', 'Skew I<->Q'), unit=None),
    OutputParameterInfo(paramName='[A]Ch2_Q-Factor', get=get_oma_ch2_generator('A', 'Q-Factor'), unit=None),
    OutputParameterInfo(paramName='[A]MZ_DC_XP', get=get_mz_dc_generator('A', 'XP'), unit=None),
    OutputParameterInfo(paramName='[A]MZ_DC_XI', get=get_mz_dc_generator('A', 'XI'), unit=None),
    OutputParameterInfo(paramName='[A]MZ_DC_XQ', get=get_mz_dc_generator('A', 'XQ'), unit=None),
    OutputParameterInfo(paramName='[A]MZ_DC_YP', get=get_mz_dc_generator('A', 'YP'), unit=None),
    OutputParameterInfo(paramName='[A]MZ_DC_YI', get=get_mz_dc_generator('A', 'YI'), unit=None),
    OutputParameterInfo(paramName='[A]MZ_DC_YQ', get=get_mz_dc_generator('A', 'YQ'), unit=None),
    OutputParameterInfo(paramName='[A]VOFE_CURRENT_SEN', get=get_vofe_current_sen_generator('A'), unit=None),
    OutputParameterInfo(paramName='[A]AVS_Voltage', get=get_avs_voltage_generator('A'), unit=None),
    # Module B (Rx)
    OutputParameterInfo(paramName='[B]SN', get=get_module_sn_generator('B'), unit='W'),
    OutputParameterInfo(paramName='[B]FwVer', get=get_module_fw_version_generator('B'), unit='W'),
    OutputParameterInfo(paramName='[B]ModPowConsumption', get=get_power_consumption_generator('B'), unit='W'),
    OutputParameterInfo(paramName='[B]DDM_Vcc', get=get_module_vcc_monitor_generator('B'), unit='V'),
    OutputParameterInfo(paramName='[B]DDM_Temperature', get=get_module_temperature_monitor_generator('B'), unit='C'),
    OutputParameterInfo(paramName='[B]DDM_Laser_Temperature', get=get_laser_temperature_monitor_generator('B'), unit='C'),
    OutputParameterInfo(paramName='[B]DDM_TxPow', get=get_module_tx_power_monitor_generator('B'), unit='dBm'),
    OutputParameterInfo(paramName='[B]DDM_RxPow', get=get_module_rx_power_monitor_generator('B'), unit='dBm'),
    OutputParameterInfo(paramName='[B]VDM_RxSignalPow', get=get_vdm_signal_power_generator('B'), unit='dBm'),
    OutputParameterInfo(paramName='[B]VDM_RxTotalPow', get=get_vdm_total_power_generator('B'), unit='dBm'),
    OutputParameterInfo(paramName='[B]VDM_OSNR', get=get_vdm_osnr_monitor_generator('B'), unit='dB'),
    OutputParameterInfo(paramName='[B]TxDriverVOCM', get=get_tx_driver_vocm_generator('B'), unit='V'),
    OutputParameterInfo(paramName='[B]DriverPI_XI', get=get_driver_pi_generator('B', 'XI'), unit='V'),
    OutputParameterInfo(paramName='[B]DriverPI_XQ', get=get_driver_pi_generator('B', 'XQ'), unit='V'),
    OutputParameterInfo(paramName='[B]DriverPI_YI', get=get_driver_pi_generator('B', 'YI'), unit='V'),
    OutputParameterInfo(paramName='[B]DriverPI_YQ', get=get_driver_pi_generator('B', 'XQ'), unit='V'),
    OutputParameterInfo(paramName='[B]RxTiaPI_XI', get=get_rx_tia_pi_generator('B', 'XI'), unit='V'),
    OutputParameterInfo(paramName='[B]RxTiaPI_XQ', get=get_rx_tia_pi_generator('B', 'XQ'), unit='V'),
    OutputParameterInfo(paramName='[B]RxTiaPI_YI', get=get_rx_tia_pi_generator('B', 'YI'), unit='V'),
    OutputParameterInfo(paramName='[B]RxTiaPI_YQ', get=get_rx_tia_pi_generator('B', 'YQ'), unit='V'),
    OutputParameterInfo(paramName='[B]RxTiaVgc_XI', get=get_rx_tia_vgc_generator('B', 'XI'), unit='V'),
    OutputParameterInfo(paramName='[B]RxTiaVgc_XQ', get=get_rx_tia_vgc_generator('B', 'XQ'), unit='V'),
    OutputParameterInfo(paramName='[B]RxTiaVgc_YI', get=get_rx_tia_vgc_generator('B', 'YI'), unit='V'),
    OutputParameterInfo(paramName='[B]RxTiaVgc_YQ', get=get_rx_tia_vgc_generator('B', 'YQ'), unit='V'),
    OutputParameterInfo(paramName='[B]PostMPD_X', get=get_post_mpd_generator('B', 'X'), unit='V'),
    OutputParameterInfo(paramName='[B]PostMPD_Y', get=get_post_mpd_generator('B', 'Y'), unit='V'),
    OutputParameterInfo(paramName='[B]RxMPD_X', get=get_rx_mpd_generator('B', 'X'), unit='V'),
    OutputParameterInfo(paramName='[B]RxMPD_Y', get=get_rx_mpd_generator('B', 'Y'), unit='V'),
    OutputParameterInfo(paramName='[B]FawBER', get=get_faw_ber_generator('B'), unit=None),
    OutputParameterInfo(paramName='[B]CfecBER', get=get_cfec_ber_generator('B'), unit=None),
    OutputParameterInfo(paramName='[B]CorrBER', get=get_corrected_ber_generator('B'), unit=None),
    OutputParameterInfo(paramName='[B]UncorrectedCW', get=get_uncorrected_codeword_generator('B'), unit=None),
    OutputParameterInfo(paramName='[B]StaircaiseBER', get=get_staircaise_estimated_ber_generator('B'), unit=None),
    OutputParameterInfo(paramName='[B]HammingBER', get=get_hamming_estimated_ber_generator('B'), unit=None),
    OutputParameterInfo(paramName='[B]EstimatedBER', get=get_total_estimated_ber_generator('B'), unit=None),
    OutputParameterInfo(paramName='[B]PcsBER', get=get_pcs_ber_generator('B'), unit=None),
    OutputParameterInfo(paramName='[B]RxPreAgc_HI', get=get_dsp_rx_pre_agc_amplitude_generator('B', 'HI'), unit=None),
    OutputParameterInfo(paramName='[B]RxPreAgc_HQ', get=get_dsp_rx_pre_agc_amplitude_generator('B', 'HQ'), unit=None),
    OutputParameterInfo(paramName='[B]RxPreAgc_VI', get=get_dsp_rx_pre_agc_amplitude_generator('B', 'VI'), unit=None),
    OutputParameterInfo(paramName='[B]RxPreAgc_VQ', get=get_dsp_rx_pre_agc_amplitude_generator('B', 'VQ'), unit=None),
    OutputParameterInfo(paramName='[B]DspMse_HI', get=get_dsp_mse_generator('B', 'HI'), unit=None),
    OutputParameterInfo(paramName='[B]DspMse_HQ', get=get_dsp_mse_generator('B', 'HQ'), unit=None),
    OutputParameterInfo(paramName='[B]DspMse_VI', get=get_dsp_mse_generator('B', 'VI'), unit=None),
    OutputParameterInfo(paramName='[B]DspMse_VQ', get=get_dsp_mse_generator('B', 'VQ'), unit=None),
    OutputParameterInfo(paramName='[B]DspMse_Avg', get=get_dsp_mse_generator('B', 'AVG'), unit=None),
    OutputParameterInfo(paramName='[B]RxAngleAverage_H', get=get_dsp_rx_angle_average_generator('B', 'H'), unit=None),
    OutputParameterInfo(paramName='[B]RxAngleAverage_V', get=get_dsp_rx_angle_average_generator('B', 'V'), unit=None),
    OutputParameterInfo(paramName='[B]DspLrxTemp', get=get_dsp_lrx_temp_generator('B'), unit=None),
    OutputParameterInfo(paramName='[B]ABC_Demod_XP', get=get_abc_demod_generator('B', 'XP'), unit=None),
    OutputParameterInfo(paramName='[B]ABC_Demod_XI', get=get_abc_demod_generator('B', 'XI'), unit=None),
    OutputParameterInfo(paramName='[B]ABC_Demod_XQ', get=get_abc_demod_generator('B', 'XQ'), unit=None),
    OutputParameterInfo(paramName='[B]ABC_Demod_YP', get=get_abc_demod_generator('B', 'YP'), unit=None),
    OutputParameterInfo(paramName='[B]ABC_Demod_YI', get=get_abc_demod_generator('B', 'YI'), unit=None),
    OutputParameterInfo(paramName='[B]ABC_Demod_YQ', get=get_abc_demod_generator('B', 'YQ'), unit=None),
    OutputParameterInfo(paramName='[B]Ch1_EVM', get=get_oma_ch1_generator('B', 'EVM'), unit=None),
    OutputParameterInfo(paramName='[B]Ch1_IQ_Offset', get=get_oma_ch1_generator('B', 'IQ Offset'), unit=None),
    OutputParameterInfo(paramName='[B]Ch1_IQGainImbalance', get=get_oma_ch1_generator('B', 'IQ Gain Imbalance'), unit=None),
    OutputParameterInfo(paramName='[B]Ch1_QuadError', get=get_oma_ch1_generator('B', 'Quadrature Error'), unit=None),
    OutputParameterInfo(paramName='[B]Ch1_SkewIQ', get=get_oma_ch1_generator('B', 'Skew I<->Q'), unit=None),
    OutputParameterInfo(paramName='[B]Ch1_Q-Factor', get=get_oma_ch1_generator('B', 'Q-Factor'), unit=None),
    OutputParameterInfo(paramName='[B]Ch2_EVM', get=get_oma_ch2_generator('B', 'EVM'), unit=None),
    OutputParameterInfo(paramName='[B]Ch2_IQ_Offset', get=get_oma_ch2_generator('B', 'IQ Offset'), unit=None),
    OutputParameterInfo(paramName='[B]Ch2_IQGainImbalance', get=get_oma_ch2_generator('B', 'IQ Gain Imbalance'), unit=None),
    OutputParameterInfo(paramName='[B]Ch2_QuadError', get=get_oma_ch2_generator('B', 'Quadrature Error'), unit=None),
    OutputParameterInfo(paramName='[B]Ch2_SkewIQ', get=get_oma_ch2_generator('B', 'Skew I<->Q'), unit=None),
    OutputParameterInfo(paramName='[B]Ch2_Q-Factor', get=get_oma_ch2_generator('B', 'Q-Factor'), unit=None),
    OutputParameterInfo(paramName='[B]MZ_DC_XP', get=get_mz_dc_generator('B', 'XP'), unit=None),
    OutputParameterInfo(paramName='[B]MZ_DC_XI', get=get_mz_dc_generator('B', 'XI'), unit=None),
    OutputParameterInfo(paramName='[B]MZ_DC_XQ', get=get_mz_dc_generator('B', 'XQ'), unit=None),
    OutputParameterInfo(paramName='[B]MZ_DC_YP', get=get_mz_dc_generator('B', 'YP'), unit=None),
    OutputParameterInfo(paramName='[B]MZ_DC_YI', get=get_mz_dc_generator('B', 'YI'), unit=None),
    OutputParameterInfo(paramName='[B]MZ_DC_YQ', get=get_mz_dc_generator('B', 'YQ'), unit=None),
    OutputParameterInfo(paramName='[B]VOFE_CURRENT_SEN', get=get_vofe_current_sen_generator('B'), unit=None),
    OutputParameterInfo(paramName='[B]AVS_Voltage', get=get_avs_voltage_generator('B'), unit=None)
]

def get_output_param(param_name):
    for i in OUTPUT_PARAMETERS:
        if i.paramName == param_name:
            return i.get()
    else:
        raise ValueError('Invalid output param name')
